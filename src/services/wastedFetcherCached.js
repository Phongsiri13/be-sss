
import { fetchWastedRows } from "./wastedFetcher.js";

const CACHE = Object.create(null);
const TTL_MS = 1000 * 60 * 60 * 24 * 30; // 30 ‡∏ß‡∏±‡∏ô

export async function fetchWastedRowsCached({ sheetId, gid, month, year } = {}) {
  const sid = sheetId || process.env.SHEET_ID;
  const key = `${sid}|${gid || "default"}`;
  const now = Date.now();

  // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô cache ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
  if (CACHE[key] && now - CACHE[key].fetchedAt < TTL_MS) {
    console.log("‚ôªÔ∏è Using cached data");
    return { fetchedAt: CACHE[key].fetchedAt, rows: CACHE[key].rows, cached: true };
  }

  // üîÑ ‡∏î‡∏∂‡∏á‡πÉ‡∏´‡∏°‡πà‡∏à‡∏≤‡∏Å Google Sheet
  const rows = await fetchWastedRows({ sheetId, gid, month, year });

  // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô cache
  CACHE[key] = { rows, fetchedAt: now };

  return { rows, cached: false, fetchedAt: now };
}

// ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥ clear cache ‡∏î‡πâ‡∏ß‡∏¢
// export function clearWastedCache({ gid } = {}) {
//   // ...
// }    